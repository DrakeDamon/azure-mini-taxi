name: context-harvest
on:
  schedule: [{ cron: "23 3 * * *" }]
  workflow_dispatch: {}
permissions:
  contents: write
  pull-requests: write
jobs:
  harvest:
    runs-on: ubuntu-latest
    env:
      SUBSCRIPTION_ID: cf96f9c0-5e5e-43d8-8ded-ae5ca7c23380
      RESOURCE_GROUP: rg-adf-dbx-demo
      ADF_FACTORY: adf-taxi-sono-global
      STORAGE_ACCOUNT: sttaxistorage
      DATABRICKS_HOST: https://adb-930731835834472.12.azuredatabricks.net
    steps:
      - uses: actions/checkout@v4

      - name: Verify scripts present
        run: |
          test -f scripts/ctx_azure.sh || { echo "scripts/ctx_azure.sh missing"; exit 1; }
          test -f scripts/ctx_databricks.sh || { echo "scripts/ctx_databricks.sh missing"; exit 1; }

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install CLIs
        run: |
          python -m pip install --upgrade databricks-cli
          # Azure CLI is pre-installed on GitHub runners
          az version
          az extension add -n datafactory --only-show-errors || az extension update -n datafactory --only-show-errors
          az extension add -n resource-graph --only-show-errors || az extension update -n resource-graph --only-show-errors

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Databricks auth
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks configure --token <<EOF
          $DATABRICKS_HOST
          $DATABRICKS_TOKEN
          EOF

      - name: Harvest Azure
        run: bash scripts/ctx_azure.sh

      - name: Harvest Databricks
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: bash scripts/ctx_databricks.sh

      - name: Commit snapshots
        run: |
          set -e
          git config user.name  "context-bot"
          git config user.email "context-bot@users.noreply.github.com"
          git add adf-dbx-delta/.context || true
          if git diff --cached --quiet; then
            echo "No changes to commit"; exit 0
          fi
          git commit -m "context: refresh snapshots" || true
          echo "Rebasing on latest main before push"
          git fetch --no-tags origin main || true
          if ! git rebase origin/main; then
            echo "Rebase failed or not possible; will fallback to PR";
            git rebase --abort || true
          else
            echo "Attempting push to main after rebase"
            if git push origin HEAD:main; then
              echo "Pushed directly to main"; exit 0
            fi
          fi
          echo "Direct push blocked; trying push via GH_PUSH_TOKEN to branch context/snapshots"
          BRANCH="context/snapshots"
          git fetch origin || true
          git checkout -B "$BRANCH"
          if [ -n "${{ secrets.GH_PUSH_TOKEN }}" ]; then
            git remote set-url origin "https://x-access-token:${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}.git"
          fi
          git push --set-upstream origin "$BRANCH"

      - name: Open PR for snapshots (fallback)
        if: always()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PUSH_TOKEN != '' && secrets.GH_PUSH_TOKEN || github.token }}
          branch: context/snapshots
          title: "context: refresh snapshots"
          commit-message: "context: refresh snapshots"
          body: |
            Automated context snapshots. If this PR is open, direct push to main is restricted (branch protection or read-only token). Merge to update adf-dbx-delta/.context.
